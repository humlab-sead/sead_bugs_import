package se.sead.mcr;

import se.sead.bugsimport.mcr.bugsmodel.BirmBeetleDat;
import se.sead.bugsimport.mcr.seadmodel.BirmBeetleData;
import se.sead.bugsimport.species.seadmodel.*;
import se.sead.model.*;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class BirmBeetleTestDefinition {

    public static final List<BirmBeetleDat> EXPECTED_ROW_DATA =
            Arrays.asList(
                    createBirmbeetleDat(1.0010020d, 1,  "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 2,  "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 3,  "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 4,  "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 5,  "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 6,  "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 7,  "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 8,  "000000000000000000000011111111111111100000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 9,  "000000000000000000000011111111111111100000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 10, "000000000000000000011111111111111111111110000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 11, "000000000000000000011111111111111111111110000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 12, "000000000000000011111111111111111111111111110000000000000000"),
                    createBirmbeetleDat(1.0010020d, 13, "000000000000000111111111111111111111111111110000000000000000"),
                    createBirmbeetleDat(1.0010020d, 14, "000000000000001111111111111111111111111111110000000000000000"),
                    createBirmbeetleDat(1.0010020d, 15, "000000000000111111111111111111111111111111110000000000000000"),
                    createBirmbeetleDat(1.0010020d, 16, "000000000011111111111111111111111111111111110000000000000000"),
                    createBirmbeetleDat(1.0010020d, 17, "000000000011111111111111111111111111111110000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 18, "000000011111111111111111111111111111111110000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 19, "000000011111111111111111111111111111110000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 20, "000000011111111111111111111111111111110000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 21, "000000011111111111111111111111111110000000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 22, "000000011111111111111111111111111110000000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 23, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 24, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 25, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 26, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 27, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 28, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 29, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 30, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 31, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 32, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 33, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 34, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 35, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010020d, 36, "000000000000000000000000000000000000000000000000000000000000"),

                    createBirmbeetleDat(1.0010070d, 1,  "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 2,  "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 3,  "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 4,  "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 5,  "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 6,  "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 7,  "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 8,  "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 9,  "000000000000011111111111111000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 10, "000000000000011111111111111000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 11, "000000000011111111111111111000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 12, "000000000011111111111111111000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 13, "000000111111111111111111111111000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 14, "000000111111111111111111111111000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 15, "000000111111111111111111111111110000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 16, "000000111111111111111111111111111000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 17, "000000111111111111111111111111111111000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 18, "000000111111111111111111111111111111000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 19, "000000111111111111111111111111111111000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 20, "000000111111111111111111111111111111000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 21, "000000111111111111111111111111111111000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 22, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 23, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 24, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 25, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 26, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 27, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 28, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 29, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 30, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 31, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 32, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 33, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 34, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 35, "000000000000000000000000000000000000000000000000000000000000"),
                    createBirmbeetleDat(1.0010070d, 36, "000000000000000000000000000000000000000000000000000000000000"),

                    // non-existing species, generate trace information but no insert in database
                    createBirmbeetleDat(2.0000000d, 1, "000000000000000000000000000000000000000000000000000000000000")
            );

    static final String BUGS_DATA_FILE = "birmBeetledat.mdb";

    private SeadBirmBeetleDataBuilder testDataBuilder;

    BirmBeetleTestDefinition(TaxaOrder defaultOrder){
        testDataBuilder = new SeadBirmBeetleDataBuilder(defaultOrder);
    }

    private static BirmBeetleDat createBirmbeetleDat(Double code, Integer mcrRow, String compressedFieldValues){
        BirmBeetleDat dataHolder = new BirmBeetleDat();
        dataHolder.setBugsCode(code);
        dataHolder.setRow(mcrRow.shortValue());
        int fieldCounter = 1;
        for (char fieldValue :
                compressedFieldValues.toCharArray()) {
            dataHolder.setFieldData(fieldCounter++, "" + fieldValue);
        }
        return dataHolder;
    }

    SeadBirmBeetleDataBuilder getBuilder(){
        return testDataBuilder;
    }

    static class SeadBirmBeetleDataBuilder {

        private TaxaSpecies code1001002;
        private TaxaSpecies code1001070;

        private List<BirmBeetleData> expectedData;

        SeadBirmBeetleDataBuilder(TaxaOrder defaultOrder){
            createSpecies(defaultOrder);
        }

        private void createSpecies(TaxaOrder defaultOrder){
            TaxaFamily carabidaeFamily =  TestTaxaFamily.create(1, "CARABIDAE", defaultOrder);
            TaxaGenus cicindelaGenus = TestTaxaGenus.create(2, "Cicindela", carabidaeFamily);
            TaxaAuthor linneAuthor = TestTaxaAuthor.create(1, "L.");
            code1001002 = TestTaxaSpecies.create(2, "sylvatica", cicindelaGenus, linneAuthor);
            code1001070 = TestTaxaSpecies.create(null, "campestris", cicindelaGenus, linneAuthor);
        }

        public List<BirmBeetleData> createExistingMCRData() {
            List<BirmBeetleData> existingData = new ArrayList<>();
            existingData.add(create(1,"000000000000000000000000000000000000000000000000000000000000",1, code1001002));
            existingData.add(create(2,"000000000000000000000000000000000000000000000000000000000000",2, code1001002));
            existingData.add(create(3,"000000000000000000000000000000000000000000000000000000000000",3, code1001002));
            existingData.add(create(4,"000000000000000000000000000000000000000000000000000000000000",4, code1001002));
            existingData.add(create(5,"000000000000000000000000000000000000000000000000000000000000",5, code1001002));
            existingData.add(create(6,"000000000000000000000000000000000000000000000000000000000000",6, code1001002));
            existingData.add(create(7,"000000000000000000000000000000000000000000000000000000000000",7, code1001002));
            existingData.add(create(8,"000000000000000000000011111111111111100000000000000000000000",8, code1001002));
            existingData.add(create(9,"000000000000000000000011111111111111100000000000000000000000",9, code1001002));
            existingData.add(create(10,"000000000000000000011111111111111111111110000000000000000000",10, code1001002));
            existingData.add(create(11,"000000000000000000011111111111111111111110000000000000000000",11, code1001002));
            existingData.add(create(12,"000000000000000011111111111111111111111111110000000000000000",12, code1001002));
            existingData.add(create(13,"000000000000000111111111111111111111111111110000000000000000",13, code1001002));
            existingData.add(create(14,"000000000000001111111111111111111111111111110000000000000000",14, code1001002));
            existingData.add(create(15,"000000000000111111111111111111111111111111110000000000000000",15, code1001002));
            existingData.add(create(16,"000000000011111111111111111111111111111111110000000000000000",16, code1001002));
            existingData.add(create(17,"000000000011111111111111111111111111111110000000000000000000",17, code1001002));
            existingData.add(create(18,"000000011111111111111111111111111111111110000000000000000000",18, code1001002));
            existingData.add(create(19,"000000011111111111111111111111111111110000000000000000000000",19, code1001002));
            existingData.add(create(20,"000000011111111111111111111111111111110000000000000000000000",20, code1001002));
            existingData.add(create(21,"000000011111111111111111111111111110000000000000000000000000",21, code1001002));
            existingData.add(create(22,"000000011111111111111111111111111110000000000000000000000000",22, code1001002));
            existingData.add(create(23,"000000000000000000000000000000000000000000000000000000000000",23, code1001002));
            existingData.add(create(24,"000000000000000000000000000000000000000000000000000000000000",24, code1001002));
            existingData.add(create(25,"000000000000000000000000000000000000000000000000000000000000",25, code1001002));
            existingData.add(create(26,"000000000000000000000000000000000000000000000000000000000000",26, code1001002));
            existingData.add(create(27,"000000000000000000000000000000000000000000000000000000000000",27, code1001002));
            existingData.add(create(28,"000000000000000000000000000000000000000000000000000000000000",28, code1001002));
            existingData.add(create(29,"000000000000000000000000000000000000000000000000000000000000",29, code1001002));
            existingData.add(create(30,"000000000000000000000000000000000000000000000000000000000000",30, code1001002));
            existingData.add(create(31,"000000000000000000000000000000000000000000000000000000000000",31, code1001002));
            existingData.add(create(32,"000000000000000000000000000000000000000000000000000000000000",32, code1001002));
            existingData.add(create(33,"000000000000000000000000000000000000000000000000000000000000",33, code1001002));
            existingData.add(create(34,"000000000000000000000000000000000000000000000000000000000000",34, code1001002));
            existingData.add(create(35,"000000000000000000000000000000000000000000000000000000000000",35, code1001002));
            existingData.add(create(36,"000000000000000000000000000000000000000000000000000000000000",36, code1001002));
            return existingData;
        }

        private BirmBeetleData create(Integer id, String mcrData, Integer rowNumber, TaxaSpecies species){
            return TestBirmBeetleData.create(id, mcrData, rowNumber, species);
        }

        public List<BirmBeetleData> createNewData() {
            List<BirmBeetleData> createdSpeciesData = new ArrayList<>();
            createdSpeciesData.add(create(null, "000000000000000000000000000000000000000000000000000000000000",1, code1001070));
            createdSpeciesData.add(create(null, "000000000000000000000000000000000000000000000000000000000000",2, code1001070));
            createdSpeciesData.add(create(null, "000000000000000000000000000000000000000000000000000000000000",3, code1001070));
            createdSpeciesData.add(create(null, "000000000000000000000000000000000000000000000000000000000000",4, code1001070));
            createdSpeciesData.add(create(null, "000000000000000000000000000000000000000000000000000000000000",5, code1001070));
            createdSpeciesData.add(create(null, "000000000000000000000000000000000000000000000000000000000000",6, code1001070));
            createdSpeciesData.add(create(null, "000000000000000000000000000000000000000000000000000000000000",7, code1001070));
            createdSpeciesData.add(create(null, "000000000000000000000000000000000000000000000000000000000000",8, code1001070));
            createdSpeciesData.add(create(null, "000000000000011111111111111000000000000000000000000000000000",9, code1001070));
            createdSpeciesData.add(create(null, "000000000000011111111111111000000000000000000000000000000000",10, code1001070));
            createdSpeciesData.add(create(null, "000000000011111111111111111000000000000000000000000000000000",11, code1001070));
            createdSpeciesData.add(create(null, "000000000011111111111111111000000000000000000000000000000000",12, code1001070));
            createdSpeciesData.add(create(null, "000000111111111111111111111111000000000000000000000000000000",13, code1001070));
            createdSpeciesData.add(create(null, "000000111111111111111111111111000000000000000000000000000000",14, code1001070));
            createdSpeciesData.add(create(null, "000000111111111111111111111111110000000000000000000000000000",15, code1001070));
            createdSpeciesData.add(create(null, "000000111111111111111111111111111000000000000000000000000000",16, code1001070));
            createdSpeciesData.add(create(null, "000000111111111111111111111111111111000000000000000000000000",17, code1001070));
            createdSpeciesData.add(create(null, "000000111111111111111111111111111111000000000000000000000000",18, code1001070));
            createdSpeciesData.add(create(null, "000000111111111111111111111111111111000000000000000000000000",19, code1001070));
            createdSpeciesData.add(create(null, "000000111111111111111111111111111111000000000000000000000000",20, code1001070));
            createdSpeciesData.add(create(null, "000000111111111111111111111111111111000000000000000000000000",21, code1001070));
            createdSpeciesData.add(create(null, "000000000000000000000000000000000000000000000000000000000000",22, code1001070));
            createdSpeciesData.add(create(null, "000000000000000000000000000000000000000000000000000000000000",23, code1001070));
            createdSpeciesData.add(create(null, "000000000000000000000000000000000000000000000000000000000000",24, code1001070));
            createdSpeciesData.add(create(null, "000000000000000000000000000000000000000000000000000000000000",25, code1001070));
            createdSpeciesData.add(create(null, "000000000000000000000000000000000000000000000000000000000000",26, code1001070));
            createdSpeciesData.add(create(null, "000000000000000000000000000000000000000000000000000000000000",27, code1001070));
            createdSpeciesData.add(create(null, "000000000000000000000000000000000000000000000000000000000000",28, code1001070));
            createdSpeciesData.add(create(null, "000000000000000000000000000000000000000000000000000000000000",29, code1001070));
            createdSpeciesData.add(create(null, "000000000000000000000000000000000000000000000000000000000000",30, code1001070));
            createdSpeciesData.add(create(null, "000000000000000000000000000000000000000000000000000000000000",31, code1001070));
            createdSpeciesData.add(create(null, "000000000000000000000000000000000000000000000000000000000000",32, code1001070));
            createdSpeciesData.add(create(null, "000000000000000000000000000000000000000000000000000000000000",33, code1001070));
            createdSpeciesData.add(create(null, "000000000000000000000000000000000000000000000000000000000000",34, code1001070));
            createdSpeciesData.add(create(null, "000000000000000000000000000000000000000000000000000000000000",35, code1001070));
            createdSpeciesData.add(create(null, "000000000000000000000000000000000000000000000000000000000000",36, code1001070));
            return createdSpeciesData;
        }

        public TaxaSpecies getExistingSpecies(){
            return code1001002;
        }

        public TaxaSpecies getCreatedSpecies(){
            return code1001070;
        }
    }
}
