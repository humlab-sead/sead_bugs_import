{
    "title": "INDEX",
    "id": 1,
    "formatVersion": 2,
    "ideas": {
        "3": {
            "title": "TEcoKoch",
            "id": 8,
            "ideas": {
                "1": {
                    "title": "TEcoDefKoch",
                    "id": 9,
                    "ideas": {
                        "1": {
                            "title": "TEcoDefGroups",
                            "id": 11,
                            "attr": {
                                "attachment": {
                                    "contentType": "text/html",
                                    "content": "May not have thought this one through properly as we lack the abbreviation column in SEAD.<br><br>One solution is:<br>tbl_ecocode_groups.label = EcoName &amp; \" (\" &amp; EcoGroupCode &amp; \")\"<div><br></div><div>map this:</div><div>econame =&gt; tbl_ecocode_groups.label</div><div>ecogroupcode = &gt; tbl_ecocode_groups.abbreviation</div><div><br>(Alternative is to add tbl_ecocode_groups.abbreviation)<br><br>Single group for BugsEcoCodes needs creation in tbl_ecocode_groups.</div>"
                                },
                                "style": {}
                            }
                        }
                    },
                    "attr": {
                        "attachment": {
                            "contentType": "text/html",
                            "content": "Mapping<div>BugsKochCode =&gt; tbl_ecocode_definitions.abbreviation<div>FullName =&gt; tbl_ecocode_definitions.label</div></div><div>Definition =&gt; tbl_ecocode_definitions.definition (YES)</div><div>Notes =&gt; tbl_ecocode_definitions.notes (YES)</div><div><br></div><div>[lookup tbl_ecocode_groups.label = 'Koch group' and system = 'Kock system' =&gt; tbl_ecocode_definitions.ecocode_group_id ??? not dependent on KochGroup]<br><br>tbl_ecocode_group_id = tbl.ecocode_groups.ecocode_group_id where TEcoDefKoch.KochGroup = TEcoDefGroups.EcoGroupCode (...)<br></div>"
                        },
                        "style": {}
                    }
                }
            },
            "attr": {
                "attachment": {
                    "contentType": "text/html",
                    "content": "Mapping<div>CODE =&gt; tbl_taxonomic_orders.code =&gt; tbl_ecocodes.taxon_id</div><div>BugsKochCode &nbsp;=&gt; lookup tbl_ecocode_definitions.abbreviation =&gt; tbl_ecocodes.ecocode_definition_id</div><div><br></div><div>requires</div><div>kochecodefinitions</div>"
                },
                "style": {}
            }
        },
        "4": {
            "title": "TRDB",
            "id": 15,
            "ideas": {
                "1": {
                    "title": "TRDBCodes",
                    "id": 16,
                    "ideas": {
                        "1": {
                            "title": "TRDBSystems",
                            "id": 17,
                            "attr": {
                                "attachment": {
                                    "contentType": "text/html",
                                    "content": "Mapping<div>RDBSystemCode =&gt; tbl_rdb_systems.rdb_system_id</div><div>RDBSystem =&gt; tbl_rdb_systems.rdb_system</div><div>RDBVersion =&gt; tbl_rdb_systems.rdb_version</div><div>Publication Year =&gt; tbl_rdb_systems.rdb_system_date</div><div>First Published = tbl_rdb_systems.rdb_first_published</div><div>Ref =&gt; lookup tbl_biblio.bugs_reference =&gt; tbl_rdb_systems.biblio_id</div><div>Country/International =&gt; lookup tbl_locations.location_name and type = 'Country' =&gt; tbl_rdb_systems.location_id</div><div><br></div><div>convert country code</div><div><br></div><div>requires</div><div>countries</div>"
                                },
                                "style": {
                                    "background": "#99cc00"
                                }
                            }
                        }
                    },
                    "attr": {
                        "attachment": {
                            "contentType": "text/html",
                            "content": "Mapping<div>RDBCode =&gt; tbl_rdb_codes.rdb_code_id ??</div><div>Category =&gt; tbl_rdb_codes.rdb_category</div><div>RDBDefinition =&gt; tbl_rdb_codes.rdb_definition</div><div>RDBSystemCode =&gt; tbl_rdb_codes.rdb_system_id</div><div><br></div><div>requires</div><div>rdbsystems</div>"
                        },
                        "style": {
                            "background": "#99cc00"
                        }
                    }
                }
            },
            "attr": {
                "attachment": {
                    "contentType": "text/html",
                    "content": "Mapping<div>CODE =&gt; lookup tbl_taxonomic_orders.code =&gt; tbl_rdb.taxon_id</div><div>CountryCode =&gt; lookup tbl_locations.location_name type = 'Country' =&gt; tbl_rdb.location_id</div><div>RDBCode =&gt; lookup tbl_rdb_codes.rdb_code_id =&gt; tbl_rdb.rdb_code_id</div><div><br></div><div>convert country code</div><div><br></div><div>requires</div><div>species + taxonomic order</div><div>rdbcodes</div><div>countries</div>"
                },
                "style": {
                    "background": "#99cc00"
                }
            }
        },
        "5": {
            "title": "TMCRSummaryData",
            "id": 19,
            "attr": {
                "attachment": {
                    "contentType": "text/html",
                    "content": "Mapping<div>CODE =&gt; tbl_taxonomic_orders.code =&gt; tbl_mcr_summary_data.taxon_id</div><div>TMaxLo =&gt; tbl_mcr_summary_data.tmax_lo</div><div>TMaxHi =&gt; tbl_mcr_summary_data.tmax_hi</div><div>TMinLo =&gt; tbl_mcr_summary_data.tmin_lo</div><div>TMinHi =&gt; tbl_mcr_summary_data.tmin_hi</div><div>TRangeHi =&gt; tbl_mcr_summary_data.trange_hi</div><div>TRangeLo =&gt; tbl_mcr_summary_data.trange_lo</div><div>COGMidTMax =&gt; tbl_mcr_summary_data.cog_mid_tmax</div><div>COGMidTRange =&gt; tbl_mcr_summary_data.cod_mid_trange</div><div><br></div><div>requires</div><div>species + taxonomic orders</div>"
                },
                "style": {
                    "background": "#99cc00"
                }
            }
        },
        "6": {
            "title": "TSynonym",
            "id": 21,
            "ideas": {
                "1": {
                    "title": "TSynonymNotes",
                    "id": 22,
                    "attr": {
                        "style": {
                            "background": "#ff0000"
                        }
                    }
                }
            },
            "attr": {
                "attachment": {
                    "contentType": "text/html",
                    "content": "Mapping<div>CODE =&gt; lookup taxonomic_orders.code =&gt;&nbsp;tbl_taxa_synonyms.taxon_id</div><div>SynGenus =&gt; lookup tbl_taxa_tree_genera.genus_name (bugs order) =&gt; tbl_taxa_synonyms.genus_id</div><div>???</div><div><br></div><div>this needs to be checked.<br><br>species association (type synonym of) code = target (official sead), &nbsp; syngenus + &nbsp;syn authority = source&nbsp;</div><div>create necessary taxon (including tree, as needed). and add species association.<br><br><br>Data extraction and insertion needs to handle this too.<br><br>Notes:<br>In data entry needs to find synonyms so that user knows they are entering a synonym, even though it is master species that is stored.<br></div>"
                },
                "style": {
                    "background": "#ffff00"
                }
            }
        },
        "-2": {
            "title": "TKeys",
            "id": 7,
            "attr": {
                "attachment": {
                    "contentType": "text/html",
                    "content": "Mapping<div>Code -&gt; tbl_taxonomic_order.code =&gt; tbl_text_identification_keys.taxon_id</div><div>Ref -&gt; tbl_biblio.bugs_reference =&gt;&nbsp;tbl_text_identification_keys.biblio_id</div><div>Data -&gt;&nbsp;tbl_text_identification_keys.key_text</div><div><br></div><div>requires</div><div>species + taxonomic order</div>"
                },
                "style": {
                    "background": "#99cc00"
                }
            }
        },
        "-4": {
            "title": "TSpeciesAssociation",
            "id": 18,
            "attr": {
                "attachment": {
                    "contentType": "text/html",
                    "content": "Mapping<div>Code -&gt; tbl_taxonomic_order.code =&gt;&nbsp;tbl_species_associations.taxon_id</div><div>AssociatedSpeciesCODE -&gt; tbl_taxonomic_order.code =&gt;&nbsp;tbl_species_associations.associated_taxon_id</div><div>AssociationType -&gt; tbl_tbl_species_association_types.association_type_name =&gt; tbl_species_associations.association_type_id (possible conversion needed)</div><div>Ref -&gt; tbl_biblio.bugs_reference =&gt; tbl_species_associations.biblio_id</div><div><br></div><div>on association type does not exist raise error</div><div>empty type? =&gt; is associated with (conversion)</div><div><br></div><div><br></div><div>requires</div><div>species + taxonomic order</div><div>association types (?)</div>"
                },
                "style": {
                    "background": "#ffff00"
                }
            }
        },
        "-5": {
            "title": "TAttributes",
            "id": 20,
            "attr": {
                "attachment": {
                    "contentType": "text/html",
                    "content": "Mapping<div>Code =&gt; tbl_taxonomic_order.code =&gt;&nbsp;tbl_taxa_measured_attributes.taxon_id</div><div>AttribType =&gt; tbl_taxa_measured_attributes.attribute_type</div><div>AttribMeasure =&gt; tbl_taxa_measured_attributes.measure</div><div>Value =&gt; tbl_taxa_measured_attributes.data</div><div>AttribUnits =&gt; tbl_taxa_measured_attributes.attribute_units</div><div><br></div><div>requires</div><div>species + taxonomic order</div>"
                },
                "style": {
                    "background": "#99cc00"
                }
            }
        },
        "3.5": {
            "title": "TEcoBugs",
            "id": 23,
            "ideas": {
                "1": {
                    "title": "TEcoDefBugs",
                    "id": 24,
                    "attr": {
                        "attachment": {
                            "contentType": "text/html",
                            "content": "Mapping<div>BugsEcoCODE =&gt;&nbsp;tbl_ecocode_definitions.abbreviation</div><div>EcoLabel =&gt;&nbsp;tbl_ecocode_definitions.label</div><div>Definitions =&gt;&nbsp;tbl_ecocode_definitions.definition ???</div><div>Notes =&gt;&nbsp;tbl_ecocode_definitions.notes ???</div><div>SortOrder =&gt;&nbsp;tbl_ecocode_definitions.sort_order</div><div><br></div><div>lookup tbl_ecocode_groups.lable = 'Bugs group' =&gt;&nbsp;tbl_ecocode_definitions.ecocode_group_id</div>"
                        },
                        "style": {},
                        "position": [
                            206,
                            -8,
                            1
                        ]
                    }
                }
            },
            "attr": {
                "style": {},
                "attachment": {
                    "contentType": "text/html",
                    "content": "Mapping<div>CODE =&gt; tbl_taxonomic_order.code = &gt;&nbsp;tbl_ecocodes.taxon_id</div><div>BugsEcoCode =&gt; lookup tbl_ecocode_definition.abbreviation =&gt; tbl_ecocodes.ecocode_definition_id</div><div><br></div><div>requires</div><div>bugsecodefinitions</div>"
                }
            }
        },
        "5.5": {
            "title": "TMCRNames",
            "id": 25,
            "attr": {
                "style": {
                    "background": "#99cc00"
                },
                "attachment": {
                    "contentType": "text/html",
                    "content": "Mapping<div>CODE =&gt; lookup taxonomic_orders.code =&gt; tbl_mcr_names.taxon_id</div><div>MCRNumber =&gt; tbl_mcr_names.mcr_number</div><div>MCRName =&gt; tbl_mcr_names.mcr_species_name</div><div>CompareStatus =&gt; tbl_mcr_names.comparison_notes</div><div>MCRNameTrim =&gt; tbl_mcr_names.mcr_name_trim</div><div><br></div><div>requires</div><div>species + taxonomic orders</div>"
                }
            }
        },
        "5.25": {
            "title": "TBirmBEETLEdat",
            "id": 4,
            "attr": {
                "style": {
                    "background": "#99cc00"
                }
            }
        },
        "-1": {
            "title": "TTaxoNotes",
            "id": 26,
            "attr": {
                "style": {
                    "background": "#99cc00"
                },
                "attachment": {
                    "contentType": "text/html",
                    "content": "Mapping<div>Code =&gt; tbl_taxonomic_order.code =&gt; tbl_taxonomy_notes.taxon_id</div><div>Ref =&gt; tbl_biblio.bugs_reference =&gt; tbl_taxonomy_notes.biblio_id</div><div>Data =&gt; tbl_taxonomy_notes.taxonomy_notes</div><div><br></div><div>requires</div><div>species + taxonomic order</div>"
                }
            }
        },
        "-6": {
            "title": "TFossil",
            "id": 27,
            "ideas": {
                "1": {
                    "title": "TSample",
                    "id": 28,
                    "ideas": {
                        "1": {
                            "title": "TCountsheet",
                            "id": 30,
                            "ideas": {
                                "1": {
                                    "title": "TSite",
                                    "id": 31,
                                    "attr": {
                                        "position": [
                                            136,
                                            -54.75,
                                            1
                                        ],
                                        "style": {
                                            "background": "#99cc00"
                                        },
                                        "attachment": {
                                            "contentType": "text/html",
                                            "content": "Mapping<div>SiteName =&gt; tbl_sites.site_name</div><div>Region =&gt; tbl_locations.location_name + type = 'Unprocessed Bugs Transfer' =&gt; tbl_site_locations.location_id</div><div>Country =&gt; tbl_locations.location_name + type = 'Country' =&gt; tbl_site_locations.location_id</div><div>NGR =&gt; tbl_sites.national_site_identifier</div><div>LatDD =&gt; tbl_sites.latitude_dd</div><div>LongDD =&gt; tbl_sites.longitude_dd</div><div>Alt =&gt; tbl_sites.altitude</div><div>Interp =&gt; tbl_sites.description</div><div>SiteCODE =&gt; bugs_import.bugs_traces.bugsdata</div><div><br></div><div><div>requires</div><div>countries</div></div><div><br></div><div>conversions for region</div><div>'Alpes Maritime' =&gt;&nbsp;'Alpes-Maritimes'<br></div><div>'Ameraliksfjord' =&gt; 'Ameraliksfjordur'<br></div><div>'Angermannland' =&gt;&nbsp;'Angermanland'<br></div><div>'Co. Down' =&gt;&nbsp;'County Dowm'<br></div><div>'Co. Louth' =&gt;&nbsp;'County Louth'<br></div><div>'Inverness shire' =&gt;&nbsp;'Inverness-shire'<br></div><div>'Leics.' =&gt;&nbsp;'Leicestershire'<br></div><div>'Møen' =&gt;&nbsp;'Møn'<br></div><div>'Noord Brabant' =&gt;&nbsp;'Noord-Brabant<br></div><div>'Noord Holland' =&gt;&nbsp;'Noord-Holland'<br></div><div>'North' =&gt;&nbsp;'North Holland'<br></div><div>'Not located' =&gt;&nbsp;NULL<br></div><div>'Notts.' =&gt;&nbsp;'Nottinghamshire'<br></div><div>'Ostergottland' =&gt;&nbsp;'Ostergotland'<br></div><div>'Ostobottnia media' =&gt;&nbsp;'Ostrobothnia media'<br></div><div>'Ostrobottnia australis' =&gt;&nbsp;'Ostrobothnia australis'<br></div><div>'Ostrobottnia borealis' =&gt;&nbsp;'Ostrobothnia borealis'<br></div><div>'Ostrobottnia media' =&gt;&nbsp;'Ostrobothnia media'<br></div><div>'Reykjavik' =&gt;&nbsp;'Reykjavík'<br></div><div>'S Uist, Outer Hebrides' =&gt;&nbsp;'South Uist, Outer Hebrides'<br></div><div>'Sjaelland' =&gt;&nbsp;'Zealand'<br></div><div>'Vagsøy' =&gt;&nbsp;'Vågsøy'<br></div><div>'Yorks' =&gt;&nbsp;'Yorkshire'<br></div><div>'Ångermanland' =&gt; 'Angermanland'<br></div><div><br></div><div>--UPDATE tbl_bugs_tsite SET \"Country\" = 'United Kingdom' WHERE \"SiteCODE\" = 'SITE000006';</div><div><br></div><div>region = Isle of Man, Jersey, Guernsey =&gt; location type = Country</div>"
                                        }
                                    },
                                    "ideas": {
                                        "1": {
                                            "title": "TSiteOtherProxies",
                                            "id": 37,
                                            "attr": {
                                                "attachment": {
                                                    "contentType": "text/html",
                                                    "content": "Mapping<div>SiteCODE =&gt; bugs_import.bugs_trace.bugsdata =&gt;&nbsp;tbl_site_other_records.site_id</div><div>HasPollen =&gt; lookup tbl_record_types.record_type_name('External pollen data') =&gt; &nbsp;tbl_site_other_records.record_type_id</div><div>HasPlantMacro =&gt; lookup tbl_record_types.record_type_name('External plant macro data') =&gt; &nbsp;tbl_site_other_records.record_type_id</div><div>HasDiatoms =&gt; lookup tbl_record_types.record_type_name('Diatoms') =&gt; &nbsp;tbl_site_other_records.record_type_id</div><div>HasChironomids =&gt; lookup tbl_record_types.record_type_name('Chironomids') =&gt; &nbsp;tbl_site_other_records.record_type_id</div><div>HasSoilChemistry =&gt; lookup tbl_record_types.record_type_name('Soil chemistry/properties') =&gt; &nbsp;tbl_site_other_records.record_type_id&nbsp;</div><div>HasIsotopes =&gt; lookup tbl_record_types.record_type_name('Isotopes') =&gt; &nbsp;tbl_site_other_records.record_type_id&nbsp;</div><div>HasAnimalBones =&gt; lookup tbl_record_types.record_type_name('Animal bones') =&gt; &nbsp;tbl_site_other_records.record_type_id&nbsp;</div><div>HasArcheology =&gt; lookup tbl_record_types.record_type_name('Other archaeology') =&gt; &nbsp;tbl_site_other_records.record_type_id&nbsp;</div><div>HasMolluscs =&gt; lookup tbl_record_types.record_type_name('Molluscs') =&gt; &nbsp;tbl_site_other_records.record_type_id&nbsp;</div><div>bugs columns generate new row</div><div><br></div><div>requires</div><div>sites</div>"
                                                },
                                                "style": {
                                                    "background": "#99cc00"
                                                }
                                            }
                                        },
                                        "0.5": {
                                            "title": "TSIteRef",
                                            "id": 38,
                                            "attr": {
                                                "style": {
                                                    "background": "#99cc00"
                                                },
                                                "attachment": {
                                                    "contentType": "text/html",
                                                    "content": "Mapping<div>SiteCODE =&gt; bugs_import.bugs_traces.bugsdata =&gt; tbl_site_references.site_id</div><div>Ref =&gt; tbl_biblio.bugs_reference =&gt;&nbsp;tbl_site_references.biblio_id</div><div><br></div><div>requires</div><div>sites</div>"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "attr": {
                                "position": [
                                    143.5,
                                    45,
                                    1
                                ],
                                "style": {
                                    "background": "#99cc00"
                                },
                                "attachment": {
                                    "contentType": "text/html",
                                    "content": "Mapping<div>CountsheeName =&gt; tbl_sample_groups.sample_group_name</div><div>SiteCODE =&gt; bugs_import.bugs_traces.bugsData =&gt; tbl_sample_groups.site_id</div><div>SheetContext =&gt; converted lookup tbl_sample_group_sampling_contexts.sampling_context =&gt; tbl_sample_groups.sampling_context_id</div><div>SheetType =&gt;&nbsp;</div><div>Lookup tbl_method.method_name = 'Temporary record' =&gt; tbl_sample_groups.method_id</div><div><br></div><div>empty context generate error.</div><div><br></div><div>conversions for context</div><div>'Archaeological contexts' =&gt;&nbsp;'Archaeological site'</div><div><br></div><div>requires</div><div>sites</div>"
                                }
                            }
                        },
                        "2": {
                            "title": "TDatesRadio",
                            "id": 32,
                            "ideas": {
                                "1": {
                                    "title": "TDatesMethods",
                                    "id": 34,
                                    "attr": {
                                        "position": [
                                            196.5,
                                            23.5,
                                            1
                                        ],
                                        "style": {
                                            "background": "#ff0000"
                                        }
                                    }
                                },
                                "2": {
                                    "title": "TLab",
                                    "id": 39,
                                    "attr": {
                                        "attachment": {
                                            "contentType": "text/html",
                                            "content": "Mapping<div>LabId =&gt;&nbsp;tbl_dating_labs.international_lab_id</div><div>Labname =&gt;&nbsp;tbl_dating_labs.lab_name</div><div>Country =&gt; lookup tbl_locations.location_name = Country and type = 'Country' =&gt; tbl_dating_labs.country_id</div>"
                                        },
                                        "style": {
                                            "background": "#99cc00"
                                        }
                                    }
                                }
                            },
                            "attr": {
                                "attachment": {
                                    "contentType": "text/html",
                                    "content": "Mapping<div>DateCode =&gt; tbl_Datasets.dataset_name<br><div>SampleCode =&gt; bugs_import.bugs_traces.bugsdata =&gt;&nbsp;tbl_analysis_entities.physical_sample_id</div><div>LabNr =&gt;&nbsp;tbl_geochronology.lab_number</div><div>Uncertainty =&gt; lookup tbl_dating_uncertainty.uncertainty = Uncertainty =&gt;&nbsp;tbl_geochronology.dating_uncertainty_id</div><div>Date =&gt; tbl_geochronology.age</div><div>AgeErrorOrPlusError =&gt; tbl_geochronology.error_older</div><div>AgeErrorMinus =&gt; tbl_geochronology.error_younger</div><div>DatingMethod =&gt; lookup tbl_methods.method_abbrev_or_alt_name = DatingMethod =&gt; tbl_datasets.method_id</div><div>LabId =&gt; lookup tbl_dating_labs.international_lab_id = LabId =&gt; tbl_geochronology.dating_lab_id</div><div>Notes =&gt; tbl_geochronology.notes</div><div><br></div><div>1. create tbl_datasets</div><div><blockquote style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><div>master_set_id = lookup tbl_dataset_masters.master_name = 'Bugs database\"</div><div>data_type_id = lookup&nbsp;tbl_data_types.data_type_name = 'Undefined other' ? ???? Should this not be the correct data type, or is that not known?<br></div><div>method_id = lookup tbl_methods.method_abbrev_or_alt_name = DatingMethod</div><div>dataset_name = DateCODE<br></div></blockquote>2. create tbl_analysis_entities</div></div><blockquote style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><div><div>physical_sample_id = Lookup bugs_import.bugs_traces.bugsData contain SampleCODE</div></div><div>dataset_id = created dataset</div></blockquote>3. create tbl_geochronology<div><blockquote style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><div>analysis_entity_id = created analysi entity<br></div><div>dating_lab_id = lookup tbl_dating_labs.international_lab_id = LabId</div><div>lab_number = LabNr</div><div>age = Date<br></div><div>error_older = AgeErrorOrPlusError</div><div>error_younger = AgeErrorMinus || AgeErrorOrPlusError</div><div>notes = Notes</div></blockquote><div><br></div>Age -&gt; different precision and scale than rest of application?<br><div><br></div>Dating material??</div><div>How to deal with dating specifications with only a note?&nbsp;</div><div>-&gt; fix by conversions.</div><div>How to deal with dating specifications without data?</div><div>-&gt; Skip completely empty items.</div><div>-&gt; function for ignoring specific items (error on empty date).<br><div><div><br></div><div>conversions AgeErrorMinus</div><div>Null =&gt; AgeErrorOrPlusError</div><div><br></div><div>dating methods converted to abbreviations in sead: see mapdatingmethod($1, $2)</div><div><br></div><div>dating uncertainty updates</div><div>c =&gt; Ca.</div><div>ca =&gt; Ca.</div><div>from =&gt; From</div><div>to =&gt; To</div><div><br></div><div>LabId transformations</div><div>Birmingham =&gt; Birm</div><div><br></div><div>requires</div><div>samples</div></div></div>"
                                },
                                "style": {
                                    "background": "#ff9900"
                                }
                            }
                        },
                        "3": {
                            "title": "TDatesCalendar",
                            "id": 33,
                            "attr": {
                                "attachment": {
                                    "contentType": "text/html",
                                    "content": "Mapping<div>SampleCODE =&gt; lookup bugs_import.bugs_trace.bugsdata =&gt;&nbsp;tbl_relative_dates.physical_sample_id</div><div>Uncertainty =&gt; lookup&nbsp;tbl_dating_uncertainty.uncertainty =&gt;&nbsp;tbl_relative_dates.dating_uncertainty_id</div><div>Date + BCADBP =&gt; concatenate 'CAL_' + Date + BCADBP =&gt; lookup tbl_relative_ages.\"Abbreviation\" =&gt; tbl_relative_dates.relative_age_id</div><div>DatingMethod =&gt; lookup tbl_methods.method_abbrev_or_alt_name =&gt;&nbsp;tbl_relative_dates.method_id</div><div>Notes =&gt; tbl_relative_dates.notes</div><div><br></div><div>date + bcadbp =&gt; new relative age, set age data from values;&nbsp;</div><div>&nbsp; &nbsp;-&gt; relative age type from dating method (?)</div><div>How to map dating method to relative age type?</div><div>Fix naming before or string lookup?</div><div><br></div><div>set method by datingMethod ?</div><div>&nbsp;-&gt; not the same thing</div><div><br></div><div>From + to from same sample generates one relative age (start and stop dates). type = calendar date range.</div><div>&nbsp;-&gt; a range is one relative dates also.&nbsp;</div><div>Single for a sample =&gt; relative age type = calendar date&nbsp;</div><div><br></div><div><br></div><div><br></div><div>Normalize date data</div><div><br></div><div>convertsions&nbsp;</div><div>uncertainty&nbsp;</div><div>To &gt; =&gt; &gt;</div><div>from ca. =&gt; From ca.</div><div>Tc ca. =&gt; To ca.</div><div>Ca, =&gt; Ca.</div><div><br></div><div>requires</div><div>samples</div>"
                                },
                                "style": {
                                    "background": "#99cc00"
                                }
                            }
                        },
                        "4": {
                            "title": "TDatesPeriod",
                            "id": 35,
                            "ideas": {
                                "1": {
                                    "title": "TPeriods",
                                    "id": 36,
                                    "attr": {
                                        "attachment": {
                                            "contentType": "text/html",
                                            "content": "Mapping<div>Period Name =&gt; tbl_relative_ages.relative_age_name</div><div>Type =&gt; lookup&nbsp;tbl_relative_age_types.age_type = Type =&gt;&nbsp;tbl_relative_ages.relative_age_type_id</div><div>Description =&gt; tbl_relative_ages.description</div><div>Reference =&gt; lookup tbl_biblio.bugs_reference =&gt;&nbsp;tbl_relative_age_refs.biblio_id</div><div>Geography =&gt; lookup tbl_locations.location_name =&gt;&nbsp;tbl_relative_ages.location_id</div><div>Begin + BP etc =&gt; convert using type = 'begin' and method = 'C14' =&gt; tbl_relative_ages.c14_age_older</div><div>End + BP etc =&gt; convert using type = 'end' and method = 'C14' =&gt; tbl_relative_ages.c14_age_younger<br></div><div><div>Begin + BP etc =&gt; convert using type = 'begin' and method = 'cal' =&gt; tbl_relative_ages.cal_age_older</div><div>End + BP etc =&gt; convert using type = 'end' and method = 'cal' =&gt; tbl_relative_ages.cal_age_younger</div></div><div>PeriodCODE =&gt; tbl_relative_ages.\"Abbreviation\"</div><div><br></div><div>exclude for periodcode = '?'</div><div><br></div><div>conversion for age values</div><div>(see ImportFunctions.GetPeriodAge(date_value, bcad_value, age_direction, age_type))</div><div>-&gt; if type = c14 convert iff bcad_value = 'BP'</div><div>-&gt; if type = 'cal' convert iff bcad_value = 'BP'</div><div>usage:</div><div>GetPeriodAge(prow.periodbegin, prow.beginbcad, 'beginbcad', 'c14') =&gt; c14_age_older</div><div>GetPeriodAge(prow.periodend, prow.endbcad, 'endbcad', 'c14') =&gt; c14_age_younger<br></div><div>GetPeriodAge(prow.periodbegin, prow.beginbcad, 'beginbcad', 'cal') =&gt; cal_age_older<br></div><div>GetPeriodAge(prow.periodend, prow.endbcad, 'endbcad', 'cal') =&gt; cal_age_younger<br></div><div><br></div><div>reduce this...</div><div>date_value = null =&gt; null</div><div>bcad_value = null &amp; date_value = 0 &amp; age_type = 'c14' =&gt; 0</div><div>bcad_value = null &amp; date_value = 0 &amp; age_type != 'c14' =&gt; null</div><div>bcad_value = 'BP' &amp; age_type = 'cal' =&gt; return null;</div><div>bcad_value = 'BP' &amp; age_type != 'cal' &amp; age_direction = 'beginbcad' =&gt; date_value</div><div>bcad_value = 'BP' &amp; age_type != 'cal' &amp; age_direction = 'endbcad' =&gt; date_value<br></div><div>(bcad_value = 'AD' or bcad_value = 'BC') &amp; age_type = 'c14' =&gt; null</div><div>bcad_value = 'AD' &amp; age_direction = 'beginbcad' =&gt; 1950 - date_value<br></div><div>bcad_value = 'AD' &amp; age_direction = 'endbcad' =&gt; 1950 - date_value<br></div><div><div>bcad_value = 'BC' &amp; age_direction = 'beginbcad' =&gt; date_value + 1950<br></div><div>bcad_value = 'BC' &amp; age_direction = 'endbcad' =&gt; date_value + 1950<br><br>Abbreviation column name should be changed!!!!<br><br>Note:<br>Data cleaning in Bugs needed... still<br></div></div>"
                                        },
                                        "style": {
                                            "background": "#99cc00"
                                        }
                                    }
                                }
                            },
                            "attr": {
                                "attachment": {
                                    "contentType": "text/html",
                                    "content": "Mapping<br><div>PeriodCode =&gt; bugs_import.bugs_trace.bugsdata =&gt;&nbsp;tbl_relative_dates.relative_age_id</div><div>SampleCODE =&gt; bugs_import.bugs_trace.bugsdata =&gt;&nbsp;tbl_relative_dates.physical_sample_id</div><div>Uncertainty =&gt; lookup tbl_dating_uncertainty.uncertainty =&gt;&nbsp;tbl_relative_dates.dating_uncertainty_id</div><div>DatingMethod =&gt; lookup tbl_methods.metod_abbrev_or_alt_name =&gt; tbl_relative_dates.method_id</div><div>Notes =&gt; tbl_relative_dates.notes</div><div><br></div><div>requires</div><div>periods</div><div>samples</div><div><br></div><div>transformations</div><div>dating method = 'ArchPer' and period.yeartype = 'C14' =&gt; method name = ArchPerC14</div><div>dating method = 'ArchPer' and period.yeartype = 'Calendar' =&gt; method name = ArchPerCal</div><div>dating method = 'GeolPer' and period.yeartype = 'C14' =&gt; method name = GeolPerC14</div><div>dating method = 'GeolPer' and period.yeartype = 'Calendar' =&gt; method name = GeolPerCal</div><div><br></div><div>in script ' ' (single space) uncertianty is ok, but cannot be read using external library, or not be stored via newer Access. Cannot test this but will build into functionality.</div>"
                                },
                                "style": {
                                    "background": "#99cc00"
                                }
                            }
                        }
                    },
                    "attr": {
                        "attachment": {
                            "contentType": "text/html",
                            "content": "Mapping<div>CountsheeCODE =&gt; bugs_import.bugs_traces.bugsdata =&gt; tbl_physical_samples.sample_group_id</div><div>RefNrContext =&gt; tbl_physical_samples.sample_name</div><div>lookup tbl_sample_types.type_name = 'Unspecified' =&gt; tbl_physical_samples.sample_type_id</div><div>lookup tbl_alt_ref_types.alt_ref_type = 'Other alternative sample name' =&gt; tbl_physical_samples.alt_ref_type_id</div><div>ZorDepthTop =&gt; create tbl_sample_dimensions</div><blockquote style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><div>dimension_value &nbsp;= ZorDepthTop</div></blockquote><blockquote style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><div>method_id = tbl_methods.method_abbrev_or_alt_name = 'Depth from datum', ?? this method points to method group 17 =&gt; coordinate and altitude systems</div><div>dimension_id = tbl_dimensions.dimension_name = 'Upper boundary depth from unknown reference' ?? This dimension is pointing to method group 14 =&gt; Size measurement</div></blockquote><div><div>ZorDepthBottom =&gt; create tbl_sample_dimensions</div><blockquote style=\"padding-left: 0px; margin-bottom: 0px; margin-left: 40px; border: none;\">dimension_value &nbsp;= ZorDepthBottom</blockquote><blockquote style=\"padding-left: 0px; margin-bottom: 0px; margin-left: 40px; border: none;\"><div>method_id = tbl_methods.method_abbrev_or_alt_name = 'Depth from datum',&nbsp;</div><div>dimension_id = tbl_dimensions.dimension_name = 'Lower boundary depth from unknown reference'</div><div><br></div></blockquote>Ignore the following as no data in Bugs:<br></div><div>X =&gt; tbl_sample_dimensions.dimension_value [method_id = ?, dimension_id = ?]</div><div>Y =&gt; tbl_sample_dimensions.dimension_value [method_id = ?, dimension_id = ?]</div><div>Data in X or Y produce warning.</div><div><br></div><div>requires</div><div>countsheets</div>"
                        },
                        "style": {
                            "background": "#99cc00"
                        }
                    }
                },
                "2": {
                    "title": "TFossilUncertainty",
                    "id": 29,
                    "attr": {
                        "style": {
                            "background": "#ff0000"
                        }
                    }
                }
            },
            "attr": {
                "attachment": {
                    "contentType": "text/html",
                    "content": "Mapping<div>CODE =&gt; tbl_taxonomic_order.code =&gt; tbl_abundances.taxon_id</div><div>SampleCODE =&gt; bugs_import.bugs_traces.bugsdata =&gt; tbl_analysis_entities.physical_sample_id</div><div>Abundance =&gt; tbl_abundances.abundance</div><div>lookup tbl_abundance_elements.element_name = 'MNI' =&gt; tbl_abundance.abundance_element_id</div><div><br></div><div>group analysis entities based on dataset + physical sample</div><div><br></div><div>analysis entity dataset from countsheet (countsheet code = dataset_name, sheet-type = data_type, dataset_master = 'bugs database', method = 'palaeoentomology')</div><div><br></div><div>dataset datatype = countsheet.sheet type &nbsp;= tbl_data_types.data_type_name</div><div><br></div><div>requires</div><div>samples</div><div>index</div>"
                },
                "style": {
                    "background": "#99cc00"
                }
            }
        },
        "-3.5": {
            "title": "TBiology",
            "id": 5,
            "ideas": {},
            "attr": {
                "style": {
                    "background": "#99cc00"
                },
                "attachment": {
                    "contentType": "text/html",
                    "content": "Mapping<div>Code -&gt; tbl_taxonomic_order.code =&gt; tbl_text_biology.taxon.id</div><div>ref -&gt; tbl_biblio.bugs_reference =&gt; tbl_text_biology.biblio.id</div><div>data -&gt; tbl_text_biology.biology_text</div><div><br></div><div>required</div><div>species + taxonomic order code</div>"
                }
            }
        },
        "-3.25": {
            "title": "TDistrib",
            "id": 2,
            "ideas": {
                "1": {
                    "title": "TBiblio",
                    "id": 3,
                    "attr": {
                        "position": [
                            291.5,
                            4.25,
                            1
                        ],
                        "style": {
                            "background": "#ff0000"
                        },
                        "attachment": {
                            "contentType": "text/html",
                            "content": "Use imported version"
                        }
                    }
                }
            },
            "attr": {
                "attachment": {
                    "contentType": "text/html",
                    "content": "Mapping<div>Code -&gt; tbl_taxonomic_order.code =&gt; tbl_text_distribution.taxon_id</div><div>Ref -&gt; tbl_biblio.bugs_reference =&gt; tbl_text_distribution.biblio_id</div><div>Data -&gt; tbl_text_distribution.distribution_text</div><div><br></div><div>requires</div><div>species + taxonomic order</div>"
                },
                "style": {
                    "background": "#99cc00"
                }
            }
        },
        "1.5": {
            "title": "TSeasonActiveAdult",
            "id": 12,
            "ideas": {
                "1": {
                    "title": "TLookupMonths",
                    "id": 13,
                    "attr": {
                        "style": {
                            "background": "#ff0000"
                        }
                    }
                },
                "2": {
                    "title": "TCountry",
                    "id": 14,
                    "attr": {
                        "style": {
                            "background": "#99cc00"
                        },
                        "attachment": {
                            "contentType": "text/html",
                            "content": "Mapping<div>Country -&gt; tbl_locations.location_name</div><div>lookup tbl_location_types.location_type_id on location_type= 'Country' =&gt; tbl_locations.location_type_id</div>"
                        }
                    }
                }
            },
            "attr": {
                "attachment": {
                    "contentType": "text/html",
                    "content": "Mapping<div>Code -&gt; tbl_taxonomic_order.code =&gt; tbl_taxa_seasonality.taxon_id</div><div>HSeason -&gt; convert via text lookup from tbl_seasons =&gt; tbl_taxa_seasonality.season_id</div><div>CountryCode -&gt; convert via text lookup from tbl_locations.location_name =&gt; tbl_taxa_seasonality.location_id</div><div>lookup activity type from&nbsp;tbl_activity_types on&nbsp;'Adult active' =&gt; tbl_taxa_seasonality.activity_type_id</div><div><br></div><div>requires</div><div>species + taxonomic order</div><div>countries</div><div><br></div><div>season notes</div><div>Se =&gt; ?</div><div>Sep =&gt; ?</div><div><br></div><div>How to deal with changes in datasets?</div><div>Currently only adding data, but the dataset for a species may change seasonal envelope. How to deal with the updated information: just add new data, or also remove the old?</div><div>This also applies to the use case of updating data that has been updated (what counts as being the updated information?, species, location + species?)</div>"
                },
                "style": {
                    "background": "#99cc00"
                }
            }
        }
    },
    "links": [
        {
            "ideaIdFrom": 5,
            "ideaIdTo": 3,
            "attr": {
                "style": {
                    "color": "#FF0000",
                    "lineStyle": "dashed"
                }
            }
        },
        {
            "ideaIdFrom": 7,
            "ideaIdTo": 3,
            "attr": {
                "style": {
                    "color": "#FF0000",
                    "lineStyle": "dashed"
                }
            }
        },
        {
            "ideaIdFrom": 17,
            "ideaIdTo": 14,
            "attr": {
                "style": {
                    "color": "#FF0000",
                    "lineStyle": "dashed"
                }
            }
        },
        {
            "ideaIdFrom": 15,
            "ideaIdTo": 14,
            "attr": {
                "style": {
                    "color": "#FF0000",
                    "lineStyle": "dashed"
                }
            }
        },
        {
            "ideaIdFrom": 26,
            "ideaIdTo": 3,
            "attr": {
                "style": {
                    "color": "#FF0000",
                    "lineStyle": "dashed"
                }
            }
        },
        {
            "ideaIdFrom": 31,
            "ideaIdTo": 28,
            "attr": {
                "style": {
                    "color": "#FF0000",
                    "lineStyle": "dashed"
                }
            }
        },
        {
            "ideaIdFrom": 34,
            "ideaIdTo": 33,
            "attr": {
                "style": {
                    "color": "#FF0000",
                    "lineStyle": "dashed"
                }
            }
        },
        {
            "ideaIdFrom": 36,
            "ideaIdTo": 3,
            "attr": {
                "style": {
                    "color": "#FF0000",
                    "lineStyle": "dashed"
                }
            }
        },
        {
            "ideaIdFrom": 38,
            "ideaIdTo": 3,
            "attr": {
                "style": {
                    "color": "#FF0000",
                    "lineStyle": "dashed"
                }
            }
        },
        {
            "ideaIdFrom": 18,
            "ideaIdTo": 3,
            "attr": {
                "style": {
                    "color": "#FF0000",
                    "lineStyle": "dashed"
                }
            }
        }
    ],
    "attr": {
        "style": {
            "background": "#99cc00"
        },
        "attachment": {
            "contentType": "text/html",
            "content": "Notes:<br>On import check CODE exists in tbl_taxonomic_order<br>AND genus &amp; species exists in respective combination<br>(Species can be moved in Bugs - between genera etc)<br><br>KEEP LOG OF ALL CHANGES IN BUGSCEP, BUT DO NOT TRACK THESE IN SEAD STRUCTURE<br>I.e. If a species changes CODE in BugsCEP, change the code in SEAD, and write a note in THE LOG (which will be put online eventually)."
        }
    }
}