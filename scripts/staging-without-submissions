#!/bin/bash

dothostfile=~/vault/.default.sead.server
dotuserfile=~/vault/.default.sead.username

if [[ -f "$dothostfile" ]]; then
    dbhost=`cat $dothostfile`
fi
if [[ -f "$dotuserfile" ]]; then
    dbuser=`cat $dotuserfile`
fi

function dbexec() {
    db=$1
    sql=$2
    psql -v ON_ERROR_STOP=1 --host=$dbhost --username=$dbuser --no-password --dbname=$db --command "$sql"
    if [ $? -ne 0 ];  then
        echo "fatal: psql command failed!" >&2
        exit 64
    fi
}

function kick_out_users() {
    target_name=$1
    echo "info: kicking out users from ${target_name}..."
    sql=$(cat <<____EOF
        select pg_terminate_backend(pg_stat_activity.pid)
        from pg_stat_activity
        where pg_stat_activity.datname in ('${target_name}')
          and pid <> pg_backend_pid();
____EOF
    )
    dbexec "postgres" "$sql" >& /dev/null
}

function drop_target() {
    target_name=$1
    echo "info: dropping ${target_name}..."
    sql=$(cat <<____EOF
        drop database $target_name;
____EOF
    )
    dbexec "postgres" "$sql" >& /dev/null
}

function create_target() {
    source_name=$1
    target_name=$2
    echo "info: creating ${target_name}..."
    sql=$(cat <<____EOF
        create database ${target_name} with template = ${source_name};
____EOF
    )
    dbexec "postgres" "$sql" >& /dev/null
}

kick_out_users sead_staging_201912_without_submissions
drop_target sead_staging_201912_without_submissions

kick_out_users sead_staging_201912_template
create_target sead_staging_201912_template sead_staging_201912_without_submissions
